import{_ as t,c as a,o as i,ah as l}from"./chunks/framework.B49HbWsY.js";const p=JSON.parse('{"title":"NAOI TST 2025","description":"","frontmatter":{},"headers":[],"relativePath":"editorials/NAOI TST 2025/index.md","filePath":"editorials/NAOI TST 2025/index.md"}'),o={name:"editorials/NAOI TST 2025/index.md"};function r(n,e,s,c,m,d){return i(),a("div",null,[...e[0]||(e[0]=[l('<h1 id="naoi-tst-2025" tabindex="-1">NAOI TST 2025 <a class="header-anchor" href="#naoi-tst-2025" aria-label="Permalink to &quot;NAOI TST 2025&quot;">​</a></h1><p>North African Olympiad in Informatics Team Selection Test 2025 problems and solutions.</p><h2 id="available-problems" tabindex="-1">Available Problems <a class="header-anchor" href="#available-problems" aria-label="Permalink to &quot;Available Problems&quot;">​</a></h2><ul><li><a href="./clocks.html">Clocks</a> - Time-based algorithmic problem</li><li><a href="./dna.html">DNA</a> - String processing and pattern matching</li><li><a href="./jump.html">Jump</a> - Dynamic programming challenge</li><li><a href="./pi.html">Pi</a> - Mathematical computation problem</li><li><a href="./rectangles.html">Rectangles</a> - Geometry and optimization</li><li><a href="./switch.html">Switch</a> - Graph theory and state transitions</li></ul><h2 id="contest-information" tabindex="-1">Contest Information <a class="header-anchor" href="#contest-information" aria-label="Permalink to &quot;Contest Information&quot;">​</a></h2><p>The North African Olympiad in Informatics (NAOI) Team Selection Test is designed to identify the most talented competitive programmers from North African countries to represent the region in international competitions.</p><h2 id="problem-difficulty" tabindex="-1">Problem Difficulty <a class="header-anchor" href="#problem-difficulty" aria-label="Permalink to &quot;Problem Difficulty&quot;">​</a></h2><p>These problems range from intermediate to advanced difficulty levels, testing various aspects of competitive programming including:</p><ul><li>Algorithm design and analysis</li><li>Data structure implementation</li><li>Mathematical reasoning</li><li>Optimization techniques</li></ul><h2 id="study-tips" tabindex="-1">Study Tips <a class="header-anchor" href="#study-tips" aria-label="Permalink to &quot;Study Tips&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>Start with problems that match your current skill level and gradually work up to more challenging ones.</p></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Each problem includes multiple language versions (Arabic, English, French) in the statements folder.</p></div><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>These are contest-level problems - don&#39;t be discouraged if you find them challenging!</p></div>',13)])])}const u=t(o,[["render",r]]);export{p as __pageData,u as default};
