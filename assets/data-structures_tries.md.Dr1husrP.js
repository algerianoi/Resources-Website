import{_ as r,c as t,o as a,ah as o}from"./chunks/framework.B49HbWsY.js";const f=JSON.parse('{"title":"Tries (Prefix trees)","description":"","frontmatter":{},"headers":[],"relativePath":"data-structures/tries.md","filePath":"data-structures/tries.md"}'),i={name:"data-structures/tries.md"};function s(l,e,n,c,d,m){return a(),t("div",null,[...e[0]||(e[0]=[o('<h1 id="tries-prefix-trees" tabindex="-1">Tries (Prefix trees) <a class="header-anchor" href="#tries-prefix-trees" aria-label="Permalink to &quot;Tries (Prefix trees)&quot;">​</a></h1><p>A <strong>Trie</strong> (also called a <em>prefix tree</em>) is a tree-based data structure used to efficiently store and retrieve strings based on their prefixes. It can also be adapted for <strong>bitwise operations</strong> — for example, finding the maximum XOR of two numbers by building a binary trie over their bits.</p><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><ul><li><a href="https://www.youtube.com/watch?v=9EB0jfQa4a4" target="_blank" rel="noreferrer">AOI 2026 Camp #1 | Lecture on Tries</a></li><li><a href="https://www.youtube.com/watch?v=NinWEPPrkDQ" target="_blank" rel="noreferrer">Strings — MIT OpenCourseWare</a></li><li><a href="https://www.geeksforgeeks.org/dsa/introduction-to-trie-data-structure-and-algorithm-tutorials/" target="_blank" rel="noreferrer">GeeksforGeeks — Introduction to Trie Data Structure and Algorithm</a></li><li><a href="https://www.codecademy.com/article/trie-data-structure-complete-guide-to-prefix-trees" target="_blank" rel="noreferrer">Codecademy — Complete Guide to Prefix Trees</a></li></ul><h2 id="aoi-camp-problemset" tabindex="-1">AOI Camp Problemset <a class="header-anchor" href="#aoi-camp-problemset" aria-label="Permalink to &quot;AOI Camp Problemset&quot;">​</a></h2><ul><li><a href="https://leetcode.com/problems/implement-trie-prefix-tree/description/" target="_blank" rel="noreferrer">Implement Trie (Prefix Tree)</a></li><li><a href="https://leetcode.com/problems/map-sum-pairs/" target="_blank" rel="noreferrer">Map Sum Pairs</a></li><li><a href="https://leetcode.com/problems/word-break/description/" target="_blank" rel="noreferrer">Word Break</a></li><li><a href="https://leetcode.com/problems/word-break-ii/description/" target="_blank" rel="noreferrer">Word Break II</a></li><li><a href="https://leetcode.com/problems/short-encoding-of-words/description/" target="_blank" rel="noreferrer">Short Encoding of Words</a></li><li><a href="https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/" target="_blank" rel="noreferrer">Maximum XOR of Two Numbers in an Array</a></li><li><a href="https://codeforces.com/problemset/problem/282/E" target="_blank" rel="noreferrer">Codeforces 282E</a></li></ul>',6)])])}const u=r(i,[["render",s]]);export{f as __pageData,u as default};
